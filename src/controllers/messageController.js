const { google } = require('googleapis');
const { getOrCreateLabel, addLabel } = require('./labelController');

//constant values
const replyBody =
    "Hi there,\nI am currently not available. This is an autogenerated mail.\nWill get back to you soon.";

const getUnreadMessages = async (auth) => {
    const gmail = google.gmail({ version: "v1", auth });

    //finding unread messages
    const response = await gmail.users.messages.list({
        userId: "me",
        q: "is:unread",
        labelIds: ["INBOX"],
    });

    //return msgs or empty array
    return response.data.messages || [];
};


const sendReply = async (auth, msgs) => {
    const gmail = google.gmail({ version: "v1", auth });

    //checking if there are any new messages
    if (msgs && msgs.length > 0) {
        for (const msg of msgs) {

            //get the message from message id
            const mail = await gmail.users.messages.get({
                userId: "me",
                id: msg.id,
            })

            // const obj = JSON.stringify(mail.data, null, 2);
            // console.log(obj);
            // console.log(mail.data.payload.headers);

            //extract from and subject from message
            const { value: subject } = mail.data.payload.headers.find(
                (obj) => obj.name.toLowerCase() === "subject"
            )

            const { value: from } = mail.data.payload.headers.find(
                (obj) => obj.name.toLowerCase() === "from"
            )

            console.log(`New mail from ${from}`);

            //Checking for thread
            const thread = await gmail.users.threads.get({
                userId: "me",
                id: msg.threadId,
            })
            const replies = thread.data.messages.slice(1);
            // console.log(replies);

            //send reply if no message exists in thread
            if (replies.length === 0) {

                //Function that handles message sending
                await gmail.users.messages.send({
                    userId: "me",
                    requestBody: {
                        raw: Buffer.from(
                            `From: "me"\nTo: ${from}\nSubject: ${subject}\n\n${replyBody}`
                        ).toString("base64"),
                        threadId: msg.id,
                    },
                })
                console.log(`Sent reply to: ${from}`)

                //Adding label "AutoReplies" to the message
                const labelId = await getOrCreateLabel(auth);
                await addLabel(auth, labelId, msg.id);
            } else {
                console.log("No unread threads")
            }

        }
    } else {
        console.log("No new messages")
    }
}

module.exports = { getUnreadMessages, sendReply }